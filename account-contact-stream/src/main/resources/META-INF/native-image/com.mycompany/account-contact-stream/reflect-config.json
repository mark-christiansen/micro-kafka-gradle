[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lio.micronaut.http.HttpMethod;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setWithJansi","parameterTypes":["boolean"] }
  ]
},
{
  "name":"ch.qos.logback.core.OutputStreamAppender",
  "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]
},
{
  "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
  "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]
},
{
  "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
  "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.pattern.color.CyanCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.pattern.color.GrayCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture",
  "fields":[
    {"name":"listeners"}, 
    {"name":"value"}, 
    {"name":"waiters"}
  ]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture$Waiter",
  "fields":[
    {"name":"next"}, 
    {"name":"thread"}
  ]
},
{
  "name":"com.mycompany.kafka.model.canonical.AccountContact",
  "fields":[{"name":"MODEL$"}],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.model.canonical.Contact",
  "fields":[{"name":"MODEL$"}],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.model.canonical.ContactAddress",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.$StreamFactory$ApplicationProperties0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.$StreamFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.$StreamFactory$KafkaStreamsConfiguration3$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.$StreamFactory$Producer2$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.$StreamFactory$StreamProperties1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.RocksDBConfig",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.accountcontact.$AccountContactTopologyBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.health.$KafkaStreamsHealth$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.metrics.$KafkaStreamsMetrics$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.metrics.$KafkaStreamsRegistry$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.serdes.$SerdesFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.serdes.$SerdesFactory$SchemaRegistryClient0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.serdes.$SerdesFactory$Serdes1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.mycompany.kafka.streams.serdes.SerdesFactory",
  "fields":[{"name":"environment"}]
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true,
  "fields":[
    {"name":"builder"}, 
    {"name":"extAttributes"}
  ]
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "queriedMethods":[
    {"name":"getCpuLoad","parameterTypes":[] }, 
    {"name":"getProcessCpuLoad","parameterTypes":[] }
  ]
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "queryAllPublicMethods":true,
  "queriedMethods":[
    {"name":"getMaxFileDescriptorCount","parameterTypes":[] }, 
    {"name":"getOpenFileDescriptorCount","parameterTypes":[] }
  ]
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.schemaregistry.client.rest.entities.SchemaReference",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.confluent.kafka.schemaregistry.client.rest.entities.SchemaString",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setSchemaString","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"io.confluent.kafka.schemaregistry.client.rest.entities.SchemaTypeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.schemaregistry.client.rest.entities.requests.RegisterSchemaRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getReferences","parameterTypes":[] }, 
    {"name":"getSchema","parameterTypes":[] }, 
    {"name":"getSchemaType","parameterTypes":[] }, 
    {"name":"getVersion","parameterTypes":[] }
  ]
},
{
  "name":"io.confluent.kafka.schemaregistry.client.rest.entities.requests.RegisterSchemaResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["int"] }
  ]
},
{
  "name":"io.confluent.kafka.serializers.KafkaAvroSerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.serializers.context.NullContextNameStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.serializers.subject.RecordNameStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.serializers.subject.TopicNameStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.confluent.kafka.streams.serdes.avro.GenericAvroSerde"
},
{
  "name":"io.micrometer.core.instrument.Statistic",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micronaut.aop.internal.InterceptorRegistryBean",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.buffer.netty.$DefaultByteBufAllocatorConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.buffer.netty.$NettyByteBufferFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.kafka.streams.metrics.KafkaStreamsMetricsReporter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.cache.$JCacheMetricsBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.cache.$MicronautCaffeineCacheMetricsBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.datasource.$DataSourcePoolMetricsBinderFactory$DataSourceMeterBinder0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.datasource.$DataSourcePoolMetricsBinderFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.executor.$ExecutorServiceMetricsBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.grpc.$GrpcMetricsListenerFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.grpc.$GrpcMetricsListenerFactory$GrpcClientMetrics1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.grpc.$GrpcMetricsListenerFactory$GrpcServerMetrics0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.jvm.$JvmMeterRegistryBinderFactory$ClassLoaderMetrics3$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.jvm.$JvmMeterRegistryBinderFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.jvm.$JvmMeterRegistryBinderFactory$JvmGcMetrics0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.jvm.$JvmMeterRegistryBinderFactory$JvmMemoryMetrics1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.jvm.$JvmMeterRegistryBinderFactory$JvmThreadMetrics2$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.logging.$LogbackMeterRegistryBinderFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.logging.$LogbackMeterRegistryBinderFactory$LogbackMetrics0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$ByteBufAllocatorMetricsBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$InstrumentedEpollEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$InstrumentedEventLoopTaskQueueFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$InstrumentedKQueueEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$InstrumentedNioEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$NettyMetricsPipelineBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.r2dbc.$R2dbcPoolMetricsBinderFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.r2dbc.$R2dbcPoolMetricsBinderFactory$R2dbcPoolMeterBinder0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.system.$SystemMeterRegistryBinderFactoryFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.system.$SystemMeterRegistryBinderFactoryFactory$FileDescriptorMetrics2$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.system.$SystemMeterRegistryBinderFactoryFactory$ProcessorMetrics1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.system.$SystemMeterRegistryBinderFactoryFactory$UptimeMetrics0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.web.$ClientRequestMetricRegistryFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.web.$HttpMeterFilterFactory$AddClientPercentileMeterFilter1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.web.$HttpMeterFilterFactory$AddServerPercentileMeterFilter0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.web.$HttpMeterFilterFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.binder.web.$ServerRequestMeterRegistryFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.common.tags.$CommonTagsConfigurer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.$MetricsEndpoint$AvailableTag$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.$MetricsEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.$MetricsEndpoint$MetricDetails$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.$MetricsEndpoint$MetricNames$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.$MetricsEndpoint$Sample$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.MetricsEndpoint$AvailableTag",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.MetricsEndpoint$MetricDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.MetricsEndpoint$MetricNames",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.MetricsEndpoint$Sample",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.$ExportConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.intercept.$CountedInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.intercept.$TimedInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.logging.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.logging.$LoggingMeterRegistryFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.logging.$LoggingMeterRegistryFactory$LoggingMeterRegistry0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.prometheus.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.prometheus.$PrometheusMeterRegistryFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.prometheus.$PrometheusMeterRegistryFactory$PrometheusConfig0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.metrics.micrometer.prometheus.management.$PrometheusEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.context.env.PropertiesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.context.env.yaml.YamlPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.context.event.ApplicationEventPublisherFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$DefaultCurrentHealthStatus$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HealthStatus$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatDiscoveryClientCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatTask$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.HealthStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.MediaTypeConvertersRegistrar",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultConnectionPoolConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$DefaultHttpClientConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$DefaultLoadBalancerResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceConnectionPoolConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactory$HealthCheckStarter1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactory$ServiceInstanceList0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.bind.$DefaultHttpClientBinderRegistry$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.filter.$DefaultHttpClientFilterResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.interceptor.$HttpClientIntroductionAdvice$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.interceptor.configuration.$DefaultClientVersioningConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.interceptor.configuration.$NamedClientVersioningConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.loadbalance.$DiscoveryClientLoadBalancerFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.loadbalance.$LoadBalancerConverters$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.loadbalance.$ServiceInstanceListLoadBalancerFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$HttpClient0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.netty.ssl.$NettyClientSslBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.codec.$CodecConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.converters.$HttpConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.cookie.$SameSiteConverter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$AbstractResource$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$DefaultLink$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$GenericResource$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$JsonError$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$Resource$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$VndError$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.AbstractResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micronaut.http.hateoas.DefaultLink",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micronaut.http.hateoas.JsonError",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micronaut.http.hateoas.Link",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micronaut.http.hateoas.Link$Builder",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micronaut.http.hateoas.Resource",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$EpollAvailabilityCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$EpollEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$NettyThreadFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$NioEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.configuration.$NettyGlobalConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.stream.HttpStreamsServerHandler",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcaster$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.websocket.$WebSocketMessageEncoder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$CoroutineHelper$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$CorsConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$HostResolutionConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$HttpLocaleResolutionConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$MultipartConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$RouteExecutor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.binding.$BasicAuthArgumentBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.binding.$LocaleArgumentBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.binding.$RequestArgumentSatisfier$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.codec.$TextStreamCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.context.$ServerRequestContextInstrumentation$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.cors.$CorsFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.cors.$CorsOriginConverter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$ContentLengthExceededHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$ConversionErrorHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$DuplicateRouteHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$HttpStatusHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$JsonExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$URISyntaxHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$UnsatisfiedArgumentHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$UnsatisfiedRouteHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.response.$HateoasErrorResponseProcessor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.response.$HateoasErrorResponseProcessorReplacement$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$DefaultHttpCompressionStrategy$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$DefaultHttpContentProcessorResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$FormDataHttpContentSubscriberFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$NettyEmbeddedServerInstance$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.NettyHttpResponseFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.NettyHttpServer$1"
},
{
  "name":"io.micronaut.http.server.netty.NettyHttpServer$Listener"
},
{
  "name":"io.micronaut.http.server.netty.RoutingInBoundHandler",
  "queriedMethods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.micronaut.http.server.netty.SmartHttpContentCompressor"
},
{
  "name":"io.micronaut.http.server.netty.binders.$NettyBinderRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.binders.$PublisherBodyBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$AccessLogger$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$FileTypeHandlerConfiguration$CacheControlConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$FileTypeHandlerConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Http2Settings$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$NettyListenerConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Parent$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Worker$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.converters.$NettyConverters$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.converters.NettyConvertersSpi",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.decoders.HttpRequestDecoder"
},
{
  "name":"io.micronaut.http.server.netty.encoders.HttpResponseEncoder"
},
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonHttpContentSubscriberFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonViewMediaTypeCodecFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonViewServerFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.ssl.$BuildSelfSignedCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilder$SelfSignedNotConfigured$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilder$SelfSignedConfigured$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.ssl.$SslEnabledCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfiguration$CacheControlConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.websocket.NettyServerWebSocketUpgradeHandler",
  "queriedMethods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.micronaut.http.server.util.$DefaultHttpClientAddressResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.$DefaultHttpHostResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.$CompositeHttpLocaleResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.$CookieLocaleResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.$HttpFixedLocaleResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.$RequestLocaleResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.websocket.$ServerWebSocketProcessor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.inject.annotation.AnnotationConvertersRegistrar",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.inject.provider.BeanProviderDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.inject.provider.JakartaProviderBeanDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.inject.provider.JavaxProviderBeanDefinition"
},
{
  "name":"io.micronaut.jackson.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$JacksonConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$JsonFactory0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.codec.$JsonMediaTypeCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.core.env.CloudFoundryVcapApplicationPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.core.env.CloudFoundryVcapServicesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.core.env.EnvJsonPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.core.env.JsonPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.databind.$DatabindPropertyBinderExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.databind.$JacksonDatabindMapper$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.databind.convert.$JacksonConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.modules.$BeanIntrospectionModule$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ConvertibleValuesSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$JacksonObjectSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$JsonNodeDeserializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$JsonNodeSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$OptionalValuesSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ResourceModule$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ResourceSerializerModifier$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.$JsonObjectSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.bind.$JsonBeanPropertyBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.codec.$JsonMediaTypeCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.convert.$JsonConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.$LogLevel$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.$PropertiesLoggingLevelsConfigurer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.impl.$Log4jLoggingSystem$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.impl.$LogbackLoggingSystem$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$EndpointConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$EndpointDefaultConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$EndpointEnabledCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$EndpointSensitivityProcessor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$EndpointsFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.beans.$BeansEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.beans.impl.$DefaultBeanDefinitionData$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.beans.impl.$DefaultBeanDefinitionDataCollector$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.env.$EnvironmentEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.health.$HealthEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.health.$HealthEndpoint$StatusConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.health.filter.$HealthResultFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.$InfoEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.impl.$ReactiveInfoAggregator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.source.$BuildInfoSource$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.source.$ConfigurationInfoSource$Definition$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.source.$ConfigurationInfoSource$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.source.$GitInfoSource$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.loggers.$LoggersEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.loggers.impl.$DefaultLoggersManager$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.loggers.impl.$Log4jLoggingSystem$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.loggers.impl.$LogbackLoggingSystem$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.processors.$DeleteEndpointRouteBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.processors.$ReadEndpointRouteBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.processors.$WriteEndpointRouteBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.refresh.$RefreshEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.routes.$RoutesEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.routes.impl.$DefaultRouteData$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.routes.impl.$DefaultRouteDataCollector$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.stop.$ServerStopEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.threads.$ThreadDumpEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.threads.impl.$DefaultThreadInfoMapper$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.aggregator.$DefaultHealthAggregator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.$DefaultHealthResult$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.DefaultHealthResult",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micronaut.management.health.indicator.HealthResult",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.micronaut.management.health.indicator.discovery.$DiscoveryClientHealthIndicator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.discovery.$DiscoveryClientHealthIndicatorConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.diskspace.$DiskSpaceIndicator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.diskspace.$DiskSpaceIndicatorConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.jdbc.$JdbcIndicator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$ApplicationEventListener$onServerStarted2$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$ApplicationEventListener$onServiceStarted1$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.monitor.$HealthMonitorTask$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.flow.converters.$FlowConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$ReactorInstrumenterFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.annotation.$DefaultRetryPredicate$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.intercept.$RecoveryInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.$ApplicationConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.$CompositeMessageSource$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.converters.reactive.$ReactiveTypeConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.converters.time.TimeConverterRegistrar",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$TextPlainCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.scope.$RequestCustomScope$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.server.watch.event.$FileWatchRestartListener$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.async.$AsyncInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Configuration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$UserExecutorConfiguration$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.instrument.$ExecutorServiceInstrumenter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$DefaultWatchThread$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$FileWatchCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$FileWatchConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.$ValidatingInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.exceptions.$ConstraintExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultClockProvider$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultValidatorConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultValidatorFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$EmailValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$PatternValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.extractors.$DefaultValueExtractors$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.extractors.$DefaultValueExtractors$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.messages.$DefaultValidationMessages$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.resolver.$CompositeTraversableResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.$AnnotatedFilterRouteBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.$AnnotatedMethodRouteBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.$DefaultRouter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.naming.$ConfigurableUriNamingStrategy$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.naming.$HyphenatedUriNamingStrategy$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.resource.$StaticResourceConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.resource.$StaticResourceResolverFactory$Build0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.resource.$StaticResourceResolverFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$ConfigurationDefaultVersionProvider$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$RouteVersionFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$RoutesVersioningConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$VersionAwareRouterListener$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$HeaderVersionResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$HeaderVersionResolverConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$ParameterVersionResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$ParameterVersionResolverConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.websocket.interceptor.$ClientWebSocketInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "queriedMethods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "queriedMethods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.CombinedChannelDuplexHandler",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.SimpleChannelInboundHandler",
  "queriedMethods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.embedded.EmbeddedChannel$2"
},
{
  "name":"io.netty.handler.codec.MessageToByteEncoder",
  "queriedMethods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageCodec",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.codec.MessageToMessageDecoder",
  "queriedMethods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "queriedMethods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.compression.JdkZlibEncoder",
  "queriedMethods":[{"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecoder",
  "queriedMethods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecompressor"
},
{
  "name":"io.netty.handler.codec.http.HttpContentEncoder",
  "queriedMethods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpServerCodec"
},
{
  "name":"io.netty.handler.codec.http.HttpServerKeepAliveHandler",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler"
},
{
  "name":"io.netty.handler.flow.FlowControlHandler",
  "queriedMethods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.handler.stream.ChunkedWriteHandler",
  "queriedMethods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.timeout.IdleStateHandler",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Boolean",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Comparable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Double",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Integer",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Number",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.ProcessHandle",
  "methods":[
    {"name":"current","parameterTypes":[] }, 
    {"name":"pid","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String"
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.constant.Constable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.constant.ConstantDesc",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true,
  "methods":[{"name":"from","parameterTypes":["javax.management.openmbean.CompositeData"] }]
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "queriedMethods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "queriedMethods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.channels.spi.SelectorProvider",
  "queriedMethods":[
    {"name":"openServerSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }, 
    {"name":"openSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }
  ]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.UUID",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.util.zip.CRC32C",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "queriedMethods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
  {
    "name":"net.jpountz.lz4.LZ4HCJNICompressor",
    "fields":[{"name":"INSTANCE"}],
    "methods":[{"name":"<init>","parameterTypes":["int"] }]
  },
  {
    "name":"net.jpountz.lz4.LZ4HCJavaSafeCompressor",
    "fields":[{"name":"INSTANCE"}],
    "methods":[{"name":"<init>","parameterTypes":["int"] }]
  },
  {
    "name":"net.jpountz.lz4.LZ4HCJavaSafeDecompressor",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.lz4.LZ4JNICompressor",
    "fields":[{"name":"INSTANCE"}],
    "methods":[{"name":"<init>","parameterTypes":["int"] }]
  },
  {
    "name":"net.jpountz.lz4.LZ4JNIFastDecompressor",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.lz4.LZ4JNISafeDecompressor",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.lz4.LZ4JavaSafeCompressor",
    "fields":[{"name":"INSTANCE"}],
    "methods":[{"name":"<init>","parameterTypes":["int"] }]
  },
  {
    "name":"net.jpountz.lz4.LZ4JavaSafeDecompressor",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.lz4.LZ4JavaSafeFastCompressor",
    "fields":[{"name":"INSTANCE"}],
    "methods":[{"name":"<init>","parameterTypes":["int"] }]
  },
  {
    "name":"net.jpountz.lz4.LZ4JavaSafeFastDecompressor",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.lz4.LZ4JavaSafeSafeCompressor",
    "fields":[{"name":"INSTANCE"}],
    "methods":[{"name":"<init>","parameterTypes":["int"] }]
  },
  {
    "name":"net.jpountz.lz4.LZ4JavaSafeSafeDecompressor",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.xxhash.StreamingXXHash32JNI$Factory",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.xxhash.StreamingXXHash64JNI$Factory",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.xxhash.XXHash32JavaSafe",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.xxhash.XXHash32JNI",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.xxhash.XXHash64JavaSafe",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.xxhash.XXHash64JNI",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.xxhash.StreamingXXHash32JavaSafe$Factory",
    "fields":[{"name":"INSTANCE"}]
  },
  {
    "name":"net.jpountz.xxhash.StreamingXXHash64JavaSafe$Factory",
    "fields":[{"name":"INSTANCE"}]
  },
{
  "name":"org.apache.kafka.clients.consumer.CooperativeStickyAssignor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.clients.consumer.RangeAssignor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.serialization.LongSerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfo",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfoMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.kafka.streams.errors.DefaultProductionExceptionHandler",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.streams.errors.LogAndFailExceptionHandler",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.streams.processor.FailOnInvalidTimestamp"
},
{
  "name":"org.apache.kafka.streams.processor.TaskId",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.kafka.streams.processor.WallclockTimestampExtractor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.streams.processor.internals.StateDirectory$StateDirectoryProcessFile",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.streams.processor.internals.assignment.HighAvailabilityTaskAssignor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"reactor.core.publisher.Flux"
},
{
  "name":"reactor.core.publisher.Mono"
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }],
  "queriedMethods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
    {"name":"storeFence","parameterTypes":[] }
  ]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys"}, 
    {"name":"selectedKeys"}
  ]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLS13Context",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
}
]
